<<<<<<< HEAD
# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  repository: 058264528338.dkr.ecr.us-east-1.amazonaws.com/snake_game
  bucketName: 631830f07bba753b92226251eddc02aaf1705c6b43ff5f064d004dbe58f2dde3
  pullPolicy: Alwyas
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: umeshved.life
      paths:
        - path: /game
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 100m
     memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
=======
# Default values for app-deployment.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
app:
  name: null
  release: "stable"
  team: "SRE"
service:
  enabled: true
  type: "ClusterIP"
job:
  enabled: false
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
configmap:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation
pod:
  annotations:
    "prometheus.io/path": "/metrics"
    "prometheus.io/port": "80"
    "prometheus.io/scrape": "true"
image:
  repository: 058264528338.dkr.ecr.us-east-1.amazonaws.com/hangman-game
  bucketName: hangman-game
  tag: 7
  pullPolicy: Always
# resources:
#   limits:
#     cpu: 1000m
#     memory: 384Mi
#     ephemeral-storage: 128Mi
#   requests:
#     cpu: 500m
#     memory: 128Mi
#     ephemeral-storage: 64Mi
nodeSelector: { }
tolerations: [ ]
affinity: { }
nameOverride: ""
fullnameOverride: ""
imagePullSecrets:
  - name: ecr-reg-cred
deployment:
  podLabels: { }
config:
  CONTAINER_PORT: 8080
  HTTP_PROBES_ENABLED: "true"
  HTTP_PROBE_PATH: "/ping"
  RESOURCES_LIMITS_CPU: 1000m
  RESOURCES_REQUESTS_CPU: 500m
  RESOURCES_LIMITS_MEMORY: 1G
  RESOURCES_REQUESTS_MEMORY: 500Mi
  RESOURCES_LIMITS_EPHEMERAL_STORAGE: 128Mi
  RESOURCES_REQUESTS_EPHEMERAL_STORAGE: 64Mi
  HPA_ENABLED: "false"
  HPA_MIN_REPLICA: 2
  HPA_MAX_REPLICA: 10
  HPA_TARGET_CPU: 90
  HPA_TARGET_MEMORY: 90
  DB_MIGRATION_COMMAND: ""
  KUBERNETES_REPLICAS: 1
  KUBERNETES_ROLLING_UPDATE_MAX_SURGE: 1
  KUBERNETES_ROLLING_UPDATE_MAX_UNAVAILABLE: 1
  KUBERNETES_ROLLING_UPDATE_MIN_READY_SECONDS: 0
  KUBERNETES_SERVICE_PORT: 80
  KUBERNETES_SERVICE_NAME: "http"
  READINESS_INITIAL_DELAY_SECONDS: 30
  LIVENESS_INITIAL_DELAY_SECONDS: 30
  READINESS_PERIOD_SECONDS: 5
  LIVENESS_PERIOD_SECONDS: 5
  READINESS_TIMEOUT_SECONDS: 1
  LIVENESS_TIMEOUT_SECONDS: 1
  READINESS_FAILURE_THRESHOLD: 2
  LIVENESS_FAILURE_THRESHOLD: 2
  READINESS_SUCCESS_THRESHOLD: 1
  LIVENESS_SUCCESS_THRESHOLD: 1
  INGRESS_ENABLED: "false"
  INGRESS_TYPE: "internal"
  INGRESS_HOSTNAME_SUBDOMAIN: ""
  INGRESS_HOSTNAME_DOMAIN: ""
  INGRESS_PATH_TYPE: "ImplementationSpecific"
  INGRESS_PATH: "/"
  SERVICE_ACCOUNT: "false"
>>>>>>> 2045eed (change_repo_details)
